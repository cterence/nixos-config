# Source: https://github.com/tlvince/nixos-config/blob/master/.github/workflows/update-flake.yml
name: Update flake
on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

jobs:
  lockfile:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@e50d5f73bfe71c2dd0aa4218de8f4afa59f8f81d # v16
      # https://status.nixos.org shows the last update time
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@d72941d797fd3113feb6b93fd0dec494b13a2547 # v1
        with:
          app-id: ${{ secrets.APP_CLIENT_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: Update flake.lock
        uses: DeterminateSystems/update-flake-lock@a2bbe0274e3a0c4194390a1e445f734c597ebc37 # v24
        id: update-flake-lock
        with:
          commit-msg: "chore(flake.lock): update"
          pr-body: |
            ```
            {{ env.GIT_COMMIT_MESSAGE }}
            ```
          pr-title: "chore(flake.lock): update"
          pr-labels: |
            automated
            automerge
            dependencies
          nix-options: "--access-tokens github.com=${{ secrets.GH_TOKEN_FOR_UPDATES }}"
          token: ${{ steps.generate-token.outputs.token }}
      - name: Create compare URLs
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        if: steps.update-flake-lock.outputs.pull-request-operation == 'created' || steps.update-flake-lock.outputs.pull-request-operation == 'updated'
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            const comment = require('.github/scripts/comment')
            const compare = require('.github/scripts/compare')

            const urls = await compare({ core })
            if (!urls?.length) {
              return
            }

            const header = "# Compare URLs"
            const body = urls.map((url) => `- ${url}`).join("\n")

            const issueNumber = parseInt(process.env.PULL_REQUEST_NUMBER, 10)
            if (Number.isNaN(issueNumber)) {
              return
            }

            await comment({ github, context, header, body, issueNumber })
